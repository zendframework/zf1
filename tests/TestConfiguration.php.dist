<?php
/**
 * Zend Framework
 *
 * LICENSE
 *
 * This source file is subject to the new BSD license that is bundled
 * with this package in the file LICENSE.txt.
 * It is also available through the world-wide-web at this URL:
 * http://framework.zend.com/license/new-bsd
 * If you did not receive a copy of the license and are unable to
 * obtain it through the world-wide-web, please send an email
 * to license@zend.com so we can send you a copy immediately.
 *
 * @category   Zend
 * @package    UnitTests
 * @copyright  Copyright (c) 2005-2014 Zend Technologies USA Inc. (http://www.zend.com)
 * @license    http://framework.zend.com/license/new-bsd     New BSD License
 * @version    $Id$
 */

/**
 * This file defines configuration for running the unit tests for the Zend
 * Framework.  Some tests have dependencies to PHP extensions or databases
 * which may not necessary installed on the target system.  For these cases,
 * the ability to disable or configure testing is provided below.  Tests for
 * components which should run universally are always run by the master
 * suite and cannot be disabled.
 *
 * Do not edit this file. Instead, copy this file to TestConfiguration.php,
 * and edit the new file. Never commit plaintext passwords to the source
 * code repository.
 */

/**
 * GENERAL SETTINGS
 *
 * OB_ENABLED should be enabled for some tests to check if all functionality
 * works as expected. Such tests include those for Zend_Soap and Zend_Session,
 * which require that headers not be sent in order to work.
 */
defined('TESTS_ZEND_OB_ENABLED') || define('TESTS_ZEND_OB_ENABLED', false);

/**
 * Zend_Auth_Adapter_DbTable tests
 */
defined('TESTS_ZEND_AUTH_ADAPTER_DBTABLE_PDO_SQLITE_ENABLED') || define('TESTS_ZEND_AUTH_ADAPTER_DBTABLE_PDO_SQLITE_ENABLED', false);
defined('TESTS_ZEND_AUTH_ADAPTER_DBTABLE_PDO_SQLITE_DATABASE') || define('TESTS_ZEND_AUTH_ADAPTER_DBTABLE_PDO_SQLITE_DATABASE', ':memory:');

/**
 * Zend_Auth_Adapter_Ldap online tests
 * (See also TESTS_ZEND_LDAP_* configuration constants below)
 */
defined('TESTS_ZEND_AUTH_ADAPTER_LDAP_ONLINE_ENABLED') || define('TESTS_ZEND_AUTH_ADAPTER_LDAP_ONLINE_ENABLED', false);

/**
 * Zend_Cache
 *
 * TESTS_ZEND_CACHE_SQLITE_ENABLED     => sqlite extension has to be enabled
 * TESTS_ZEND_CACHE_APC_ENABLED        => apc extension has to be enabled
 * TESTS_ZEND_CACHE_WINCACHE_ENABLED   => wincache extension has to be enabled
 * TESTS_ZEND_CACHE_MEMCACHED_ENABLED  => memcache extension has to be enabled and
 *                                        a memcached server has to be available
 * TESTS_ZEND_CACHE_LIBMEMCACHED_ENABLED => memcached extension has to be enabled and
 *                                          a memcached server has to be available
 * TESTS_ZEND_CACHE_XCACHE_ENABLED     => xcache extension has to be enabled
 */
defined('TESTS_ZEND_CACHE_SQLITE_ENABLED') || define('TESTS_ZEND_CACHE_SQLITE_ENABLED', false);
defined('TESTS_ZEND_CACHE_APC_ENABLED') || define('TESTS_ZEND_CACHE_APC_ENABLED', false);
defined('TESTS_ZEND_CACHE_WINCACHE_ENABLED') || define('TESTS_ZEND_CACHE_WINCACHE_ENABLED', false);
defined('TESTS_ZEND_CACHE_XCACHE_ENABLED') || define('TESTS_ZEND_CACHE_XCACHE_ENABLED', false);
defined('TESTS_ZEND_CACHE_XCACHE_USER') || define('TESTS_ZEND_CACHE_XCACHE_USER', null);
defined('TESTS_ZEND_CACHE_XCACHE_PASSWORD') || define('TESTS_ZEND_CACHE_XCACHE_PASSWORD', null);
defined('TESTS_ZEND_CACHE_PLATFORM_ENABLED') || define('TESTS_ZEND_CACHE_PLATFORM_ENABLED', false);
defined('TESTS_ZEND_CACHE_MEMCACHED_ENABLED') || define('TESTS_ZEND_CACHE_MEMCACHED_ENABLED', false);
defined('TESTS_ZEND_CACHE_MEMCACHED_HOST') || define('TESTS_ZEND_CACHE_MEMCACHED_HOST', '127.0.0.1');
defined('TESTS_ZEND_CACHE_MEMCACHED_PORT') || define('TESTS_ZEND_CACHE_MEMCACHED_PORT', 11211);
defined('TESTS_ZEND_CACHE_MEMCACHED_PERSISTENT') || define('TESTS_ZEND_CACHE_MEMCACHED_PERSISTENT', true);
defined('TESTS_ZEND_CACHE_LIBMEMCACHED_ENABLED') || define('TESTS_ZEND_CACHE_LIBMEMCACHED_ENABLED', false);
defined('TESTS_ZEND_CACHE_LIBMEMCACHED_HOST') || define('TESTS_ZEND_CACHE_LIBMEMCACHED_HOST', '127.0.0.1');
defined('TESTS_ZEND_CACHE_LIBMEMCACHED_PORT') || define('TESTS_ZEND_CACHE_LIBMEMCACHED_PORT', 11211);
defined('TESTS_ZEND_CACHE_LIBMEMCACHED_WEIGHT') || define('TESTS_ZEND_CACHE_LIBMEMCACHED_WEIGHT', 1);

/**
 * Zend_Cloud online tests
 *
 * You may need to provide connection details for specific adapters under their 
 * specific configuration settings elsewhere in this file.
 */
defined('TESTS_ZEND_CLOUD_STORAGE_WINDOWSAZURE_CONTAINER') || define('TESTS_ZEND_CLOUD_STORAGE_WINDOWSAZURE_CONTAINER', 'simplecloudcontainer');


/**
 * Zend_Controller
 *
 * TESTS_ZEND_CONTROLLER_DISPATCHER_OB => test disabling output buffering in
 *                                        dispatcher
 */
defined('TESTS_ZEND_CONTROLLER_DISPATCHER_OB') || define('TESTS_ZEND_CONTROLLER_DISPATCHER_OB', false);

/**
 * Zend_Db_Adapter_Pdo_Mysql and Zend_Db_Adapter_Mysqli
 *
 * There are separate properties to enable tests for the PDO_MYSQL adapter and
 * the native Mysqli adapters, but the other properties are shared between the
 * two MySQL-related Zend_Db adapters.
 */
defined('TESTS_ZEND_DB_ADAPTER_PDO_MYSQL_ENABLED') || define('TESTS_ZEND_DB_ADAPTER_PDO_MYSQL_ENABLED',  false);
defined('TESTS_ZEND_DB_ADAPTER_MYSQLI_ENABLED') || define('TESTS_ZEND_DB_ADAPTER_MYSQLI_ENABLED',  false);
defined('TESTS_ZEND_DB_ADAPTER_MYSQL_HOSTNAME') || define('TESTS_ZEND_DB_ADAPTER_MYSQL_HOSTNAME', '127.0.0.1');
defined('TESTS_ZEND_DB_ADAPTER_MYSQL_USERNAME') || define('TESTS_ZEND_DB_ADAPTER_MYSQL_USERNAME', null);
defined('TESTS_ZEND_DB_ADAPTER_MYSQL_PASSWORD') || define('TESTS_ZEND_DB_ADAPTER_MYSQL_PASSWORD', null);
defined('TESTS_ZEND_DB_ADAPTER_MYSQL_DATABASE') || define('TESTS_ZEND_DB_ADAPTER_MYSQL_DATABASE', 'test');
defined('TESTS_ZEND_DB_ADAPTER_MYSQL_PORT') || define('TESTS_ZEND_DB_ADAPTER_MYSQL_PORT', 3306);

/**
 * Zend_Db_Adapter_Pdo_Sqlite
 *
 * Username and password are irrelevant for SQLite.
 */
defined('TESTS_ZEND_DB_ADAPTER_PDO_SQLITE_ENABLED') || define('TESTS_ZEND_DB_ADAPTER_PDO_SQLITE_ENABLED',  false);
defined('TESTS_ZEND_DB_ADAPTER_PDO_SQLITE_DATABASE') || define('TESTS_ZEND_DB_ADAPTER_PDO_SQLITE_DATABASE', ':memory:');

/**
 * Zend_Db_Adapter_Pdo_Mssql
 *
 * Note that you need to patch your ntwdblib.dll, the one that
 * comes with PHP does not work.  See user comments at
 * http://us2.php.net/manual/en/ref.mssql.php
 */
defined('TESTS_ZEND_DB_ADAPTER_PDO_MSSQL_ENABLED') || define('TESTS_ZEND_DB_ADAPTER_PDO_MSSQL_ENABLED',  false);
defined('TESTS_ZEND_DB_ADAPTER_PDO_MSSQL_HOSTNAME') || define('TESTS_ZEND_DB_ADAPTER_PDO_MSSQL_HOSTNAME', '127.0.0.1');
defined('TESTS_ZEND_DB_ADAPTER_PDO_MSSQL_USERNAME') || define('TESTS_ZEND_DB_ADAPTER_PDO_MSSQL_USERNAME', null);
defined('TESTS_ZEND_DB_ADAPTER_PDO_MSSQL_PASSWORD') || define('TESTS_ZEND_DB_ADAPTER_PDO_MSSQL_PASSWORD', null);
defined('TESTS_ZEND_DB_ADAPTER_PDO_MSSQL_DATABASE') || define('TESTS_ZEND_DB_ADAPTER_PDO_MSSQL_DATABASE', 'test');

/**
 * Zend_Db_Adapter_Pdo_Pgsql
 */
defined('TESTS_ZEND_DB_ADAPTER_PDO_PGSQL_ENABLED') || define('TESTS_ZEND_DB_ADAPTER_PDO_PGSQL_ENABLED',  false);
defined('TESTS_ZEND_DB_ADAPTER_PDO_PGSQL_HOSTNAME') || define('TESTS_ZEND_DB_ADAPTER_PDO_PGSQL_HOSTNAME', '127.0.0.1');
defined('TESTS_ZEND_DB_ADAPTER_PDO_PGSQL_USERNAME') || define('TESTS_ZEND_DB_ADAPTER_PDO_PGSQL_USERNAME', null);
defined('TESTS_ZEND_DB_ADAPTER_PDO_PGSQL_PASSWORD') || define('TESTS_ZEND_DB_ADAPTER_PDO_PGSQL_PASSWORD', null);
defined('TESTS_ZEND_DB_ADAPTER_PDO_PGSQL_DATABASE') || define('TESTS_ZEND_DB_ADAPTER_PDO_PGSQL_DATABASE', 'postgres');

/**
 * Zend_Db_Adapter_Oracle and Zend_Db_Adapter_Pdo_Oci
 *
 * There are separate properties to enable tests for the PDO_OCI adapter and
 * the native Oracle adapter, but the other properties are shared between the
 * two Oracle-related Zend_Db adapters.
 */
defined('TESTS_ZEND_DB_ADAPTER_PDO_OCI_ENABLED') || define('TESTS_ZEND_DB_ADAPTER_PDO_OCI_ENABLED',  false);
defined('TESTS_ZEND_DB_ADAPTER_ORACLE_ENABLED') || define('TESTS_ZEND_DB_ADAPTER_ORACLE_ENABLED',  false);
defined('TESTS_ZEND_DB_ADAPTER_ORACLE_HOSTNAME') || define('TESTS_ZEND_DB_ADAPTER_ORACLE_HOSTNAME', '127.0.0.1');
defined('TESTS_ZEND_DB_ADAPTER_ORACLE_USERNAME') || define('TESTS_ZEND_DB_ADAPTER_ORACLE_USERNAME', null);
defined('TESTS_ZEND_DB_ADAPTER_ORACLE_PASSWORD') || define('TESTS_ZEND_DB_ADAPTER_ORACLE_PASSWORD', null);
defined('TESTS_ZEND_DB_ADAPTER_ORACLE_SID') || define('TESTS_ZEND_DB_ADAPTER_ORACLE_SID',      'xe');

/**
 * Zend_Db_Adapter_Db2 and Zend_Db_Adapter_Pdo_Ibm
 * There are separate properties to enable tests for the PDO_IBM adapter and
 * the native DB2 adapter, but the other properties are shared between the
 * two related Zend_Db adapters.
 */
defined('TESTS_ZEND_DB_ADAPTER_PDO_IBM_ENABLED') || define('TESTS_ZEND_DB_ADAPTER_PDO_IBM_ENABLED',  false);
defined('TESTS_ZEND_DB_ADAPTER_DB2_ENABLED') || define('TESTS_ZEND_DB_ADAPTER_DB2_ENABLED',  false);
defined('TESTS_ZEND_DB_ADAPTER_DB2_HOSTNAME') || define('TESTS_ZEND_DB_ADAPTER_DB2_HOSTNAME', '127.0.0.1');
defined('TESTS_ZEND_DB_ADAPTER_DB2_PORT') || define('TESTS_ZEND_DB_ADAPTER_DB2_PORT', 50000);
defined('TESTS_ZEND_DB_ADAPTER_DB2_USERNAME') || define('TESTS_ZEND_DB_ADAPTER_DB2_USERNAME', null);
defined('TESTS_ZEND_DB_ADAPTER_DB2_PASSWORD') || define('TESTS_ZEND_DB_ADAPTER_DB2_PASSWORD', null);
defined('TESTS_ZEND_DB_ADAPTER_DB2_DATABASE') || define('TESTS_ZEND_DB_ADAPTER_DB2_DATABASE', 'sample');

/**
 * Zend_Db_Adapter_Sqlsrv
 * Note: Make sure that you create the "test" database and set a
 * username and password
 *
 */
defined('TESTS_ZEND_DB_ADAPTER_SQLSRV_ENABLED') || define('TESTS_ZEND_DB_ADAPTER_SQLSRV_ENABLED',  false);
defined('TESTS_ZEND_DB_ADAPTER_SQLSRV_HOSTNAME') || define('TESTS_ZEND_DB_ADAPTER_SQLSRV_HOSTNAME', 'localhost\SQLEXPRESS');
defined('TESTS_ZEND_DB_ADAPTER_SQLSRV_USERNAME') || define('TESTS_ZEND_DB_ADAPTER_SQLSRV_USERNAME', null);
defined('TESTS_ZEND_DB_ADAPTER_SQLSRV_PASSWORD') || define('TESTS_ZEND_DB_ADAPTER_SQLSRV_PASSWORD', null);
defined('TESTS_ZEND_DB_ADAPTER_SQLSRV_DATABASE') || define('TESTS_ZEND_DB_ADAPTER_SQLSRV_DATABASE', 'test');

/**
 * Zend_Feed_Rss/Zend_Feed_Atom online tests
 *
 * Set the BASEURI to a vhost pointed at the tests/Zend/Feed/_files
 * subdirectory to enable these tests.
 */
defined('TESTS_ZEND_FEED_IMPORT_ONLINE_BASEURI') || define('TESTS_ZEND_FEED_IMPORT_ONLINE_BASEURI', false);

/**
 * Zend_Feed_Reader tests
 *
 * If the ONLINE_ENABLED property is false, only tests that can be executed
 * without network connectivity are run; when enabled, all tests will run.
 */
defined('TESTS_ZEND_FEED_READER_ONLINE_ENABLED') || define('TESTS_ZEND_FEED_READER_ONLINE_ENABLED', false);

/**
 * Zend_Gdata tests
 *
 * If the ONLINE_ENABLED property is false, only tests that can be executed with
 * a mock HTTP client are run.  No request is sent to the Google Gdata servers.
 * If ONLINE_ENABLED is true, some tests may make requests to the remote
 * servers.  This does not work if you are running tests on a disconnected
 * client host.  Also, the tests may show as failures if the Google servers
 * cannot be reached or if they do not respond for another reason.
 *
 * If the CLIENTLOGIN_ENABLED property below is false, the authenticated
 * tests are reported Skipped in the test run.  Set this property to true
 * to enable tests that require ClientLogin authentication.  Enter your
 * Google login credentials in the EMAIL and PASSWORD properties below.
 *
 * Edit TestConfiguration.php, not TestConfiguration.php.dist.
 * Never commit plaintext passwords to the source code repository.
 *
 * Note: the GData tests currently require that the TZID env variable
 * be set or the timezone otherwise configured.  You'll see errors from the
 * tests if this is not the case.
 */
defined('TESTS_ZEND_GDATA_ONLINE_ENABLED') || define('TESTS_ZEND_GDATA_ONLINE_ENABLED', false);
defined('TESTS_ZEND_GDATA_CLIENTLOGIN_ENABLED') || define('TESTS_ZEND_GDATA_CLIENTLOGIN_ENABLED', false);

/*
 * The credentials provided here should be only for a TEST account.
 * Data for various services in this account may be added to, updated,
 * or deleted based upon the actions of these test accounts.
 */
defined('TESTS_ZEND_GDATA_CLIENTLOGIN_EMAIL') || define('TESTS_ZEND_GDATA_CLIENTLOGIN_EMAIL', 'example@example.com');
defined('TESTS_ZEND_GDATA_CLIENTLOGIN_PASSWORD') || define('TESTS_ZEND_GDATA_CLIENTLOGIN_PASSWORD', 'password');

/*
 * This is the ID of a blank blog.  There is no need to have
 * any content in this blog.  Also, blogs can only be used
 * several times for the purpose of these test cases before
 * they must be deleted and recreated.  Otherwise, the tests
 * will start failing, as posts to Blogger will return a 201 Created
 * response even though the entry was not posted to the blog.
 * This problem is being investigated.
 */
defined('TESTS_ZEND_GDATA_BLOGGER_ONLINE_ENABLED') || define('TESTS_ZEND_GDATA_BLOGGER_ONLINE_ENABLED', false);
defined('TESTS_ZEND_GDATA_BLOG_ID') || define('TESTS_ZEND_GDATA_BLOG_ID', '1111111111111111111');

/*
 * This is the key for a spreadsheet with data only in the first row of
 * the spreadsheet.  The strings 'a1', 'b1', 'c1', 'd1' should be in the
 * corresponding cell locations.
 */
defined('TESTS_ZEND_GDATA_SPREADSHEETS_ONLINE_ENABLED') || define('TESTS_ZEND_GDATA_SPREADSHEETS_ONLINE_ENABLED', false);
defined('TESTS_ZEND_GDATA_SPREADSHEETS_SPREADSHEETKEY') || define('TESTS_ZEND_GDATA_SPREADSHEETS_SPREADSHEETKEY', 'o01111111111111111111.1111111111111111111');
defined('TESTS_ZEND_GDATA_SPREADSHEETS_WORKSHEETID') || define('TESTS_ZEND_GDATA_SPREADSHEETS_WORKSHEETID', 'default');

/*
 * This indicates that online tests for the Google Calendar API should
 * be performed. The default calendar will be used.
 */
defined('TESTS_ZEND_GDATA_CALENDAR_ONLINE_ENABLED') || define('TESTS_ZEND_GDATA_CALENDAR_ONLINE_ENABLED', false);

/*
 * This is the fully-qualified domain name for a domiain hosted using
 * Google Apps. This domain must be registered with Google Apps and
 * have API access enabled.  This should be a TEST domain only.
 */
defined('TESTS_ZEND_GDATA_GAPPS_ONLINE_ENABLED') || define('TESTS_ZEND_GDATA_GAPPS_ONLINE_ENABLED', false);
defined('TESTS_ZEND_GDATA_GAPPS_DOMAIN') || define('TESTS_ZEND_GDATA_GAPPS_DOMAIN', 'example.com.invalid');
defined('TESTS_ZEND_GDATA_GAPPS_EMAIL') || define('TESTS_ZEND_GDATA_GAPPS_EMAIL', 'example@example.com');
defined('TESTS_ZEND_GDATA_GAPPS_PASSWORD') || define('TESTS_ZEND_GDATA_GAPPS_PASSWORD', 'password');

/*
 * This indicates that online tests for the Books Search data API
 * should be performed.
 */
defined('TESTS_ZEND_GDATA_BOOKS_ONLINE_ENABLED') || define('TESTS_ZEND_GDATA_BOOKS_ONLINE_ENABLED', false);

/*
 * This indicates that online tests for the YouTube data API should
 * be performed.
 */
defined('TESTS_ZEND_GDATA_YOUTUBE_ONLINE_ENABLED') || define('TESTS_ZEND_GDATA_YOUTUBE_ONLINE_ENABLED', false);

/*
 * This is the username to use for retrieving subscriptions, etc
 */
defined('TESTS_ZEND_GDATA_YOUTUBE_ACCOUNT') || define('TESTS_ZEND_GDATA_YOUTUBE_ACCOUNT', 'zfgdata');

/*
 * This is the developer key to access the YouTube API
 */
defined('TESTS_ZEND_GDATA_YOUTUBE_DEVELOPER_KEY') || define('TESTS_ZEND_GDATA_YOUTUBE_DEVELOPER_KEY', 'your_developer_key_here');

/*
 * This is the client ID to access the YouTube API
 */
defined('TESTS_ZEND_GDATA_YOUTUBE_CLIENT_ID') || define('TESTS_ZEND_GDATA_YOUTUBE_CLIENT_ID', 'ZF_UnitTests_unknown');

/*
 * This indicates that online tests for the Google Documents API should
 * be performed.
 */
defined('TESTS_ZEND_GDATA_DOCS_ONLINE_ENABLED') || define('TESTS_ZEND_GDATA_DOCS_ONLINE_ENABLED', false);

/*
 * This indicates that online tests for the GData Photos API should
 * be performed.
 */
defined('TESTS_ZEND_GDATA_PHOTOS_ONLINE_ENABLED') || define('TESTS_ZEND_GDATA_PHOTOS_ONLINE_ENABLED', false);

/**
 * Zend_Http_Client tests
 *
 * To enable the dynamic Zend_Http_Client tests, you will need to symbolically
 * link or copy the files in tests/Zend/Http/Client/_files to a directory
 * under your web server(s) document root and set this constant to point to the
 * URL of this directory.
 */
defined('TESTS_ZEND_HTTP_CLIENT_BASEURI') || define('TESTS_ZEND_HTTP_CLIENT_BASEURI', false);

/**
 * Zend_Http_Client_Proxy tests
 *
 * HTTP proxy to be used for testing the Proxy adapter. Set to a string of
 * the form 'host:port'. Set to null to skip HTTP proxy tests.
 */
defined('TESTS_ZEND_HTTP_CLIENT_HTTP_PROXY') || define('TESTS_ZEND_HTTP_CLIENT_HTTP_PROXY', false);
defined('TESTS_ZEND_HTTP_CLIENT_HTTP_PROXY_USER') || define('TESTS_ZEND_HTTP_CLIENT_HTTP_PROXY_USER', '');
defined('TESTS_ZEND_HTTP_CLIENT_HTTP_PROXY_PASS') || define('TESTS_ZEND_HTTP_CLIENT_HTTP_PROXY_PASS', '');

/**
 * Zend_Http_UserAgent tests
 *
 * Location of WURFL library and config file, for testing mobile device 
 * detection.
 */
defined('TESTS_ZEND_HTTP_USERAGENT_WURFL_LIB_DIR') || define('TESTS_ZEND_HTTP_USERAGENT_WURFL_LIB_DIR', false);
defined('TESTS_ZEND_HTTP_USERAGENT_WURFL_CONFIG_FILE') || define('TESTS_ZEND_HTTP_USERAGENT_WURFL_CONFIG_FILE', false);

/**
 * Location of DeviceAtlas library and data file, for testing mobile device
 * detection against DeviceAtlas
 */
defined('TESTS_ZEND_HTTP_USERAGENT_DEVICEATLAS_LIB_DIR') || define('TESTS_ZEND_HTTP_USERAGENT_DEVICEATLAS_LIB_DIR', false);
defined('TESTS_ZEND_HTTP_USERAGENT_DEVICEATLAS_DATA_FILE') || define('TESTS_ZEND_HTTP_USERAGENT_DEVICEATLAS_DATA_FILE', false);

/**
 * Location of TeraWurfl library and data file, for testing mobile device
 * detection against TeraWurfl
 */
defined('TESTS_ZEND_HTTP_USERAGENT_TERAWURFL_LIB_DIR') || define('TESTS_ZEND_HTTP_USERAGENT_TERAWURFL_LIB_DIR', false);

/**
 * Zend_Loader_Autoloader multi-version support tests
 *
 * ENABLED:      whether or not to run the multi-version tests
 * PATH:         path to a directory containing multiple ZF version installs
 * LATEST:       most recent ZF version in the PATH
 *               e.g., "1.9.2"
 * LATEST_MAJOR: most recent ZF major version in the PATH to test against
 *               e.g., "1.9.2"
 * LATEST_MINOR: most recent ZF minor version in the PATH to test against
 *               e.g., "1.8.4PL1"
 * SPECIFIC:     specific ZF version in the PATH to test against
 *               e.g., "1.7.6"
 * As an example, consider the following tree:
 *     ZendFramework/
 *     |-- 1.9.2
 *     |-- ZendFramework-1.9.1-minimal
 *     |-- 1.8.4PL1
 *     |-- 1.8.4
 *     |-- ZendFramework-1.8.3
 *     |-- 1.7.8
 *     |-- 1.7.7
 *     |-- 1.7.6
 * You would then set the value of "LATEST" and "LATEST_MAJOR" to "1.9.2", and
 * could choose between "1.9.2", "1.8.4PL1", and "1.7.8" for "LATEST_MINOR",
 * and any version number for "SPECIFIC". "PATH" would point to the parent
 * "ZendFramework" directory.
 */
defined('TESTS_ZEND_LOADER_AUTOLOADER_MULTIVERSION_ENABLED') || define('TESTS_ZEND_LOADER_AUTOLOADER_MULTIVERSION_ENABLED', false);
defined('TESTS_ZEND_LOADER_AUTOLOADER_MULTIVERSION_PATH') || define('TESTS_ZEND_LOADER_AUTOLOADER_MULTIVERSION_PATH', false);
defined('TESTS_ZEND_LOADER_AUTOLOADER_MULTIVERSION_LATEST') || define('TESTS_ZEND_LOADER_AUTOLOADER_MULTIVERSION_LATEST', false);
defined('TESTS_ZEND_LOADER_AUTOLOADER_MULTIVERSION_LATEST_MAJOR') || define('TESTS_ZEND_LOADER_AUTOLOADER_MULTIVERSION_LATEST_MAJOR', false);
defined('TESTS_ZEND_LOADER_AUTOLOADER_MULTIVERSION_LATEST_MINOR') || define('TESTS_ZEND_LOADER_AUTOLOADER_MULTIVERSION_LATEST_MINOR', false);
defined('TESTS_ZEND_LOADER_AUTOLOADER_MULTIVERSION_SPECIFIC') || define('TESTS_ZEND_LOADER_AUTOLOADER_MULTIVERSION_SPECIFIC', false);

/**
 * Zend_Ldap online tests
 */
defined('TESTS_ZEND_LDAP_ONLINE_ENABLED') || define('TESTS_ZEND_LDAP_ONLINE_ENABLED', false);

/* These largely map to the options described in the Zend_Ldap and
 * Zend_Auth_Adapter_Ldap documentation.
 *
 * Example Configuration for Active Directory:
 *                      HOST: dc1.w.net
 *             USE_START_TLS: true
 *                   USE_SSL: false
 *                  USERNAME: CN=User 1,CN=Users,DC=w,DC=net
 *            PRINCIPAL_NAME: user1@w.net
 *             LDAP_PASSWORD: pass1
 *                   BASE_DN: CN=Users,DC=w,DC=net
 *               DOMAIN_NAME: w.net
 * ACCOUNT_DOMAIN_NAME_SHORT: W
 *              ALT_USERNAME: user2
 *                    ALT_DN: CN=User 2,CN=Users,DC=w,DC=net
 *              ALT_PASSWORD: pass2
 *
 * Example Configuration for OpenLDAP
 *                      HOST: s0.foo.net
 *                  USERNAME: CN=user1,DC=foo,DC=net
 *            PRINCIPAL_NAME: user1@foo.net
 *             LDAP_PASSWORD: pass1
 *          BIND_REQUIRES_DN: true
 *                   BASE_DN: OU=Sales,DC=w,DC=net
 *               DOMAIN_NAME: foo.net
 * ACCOUNT_DOMAIN_NAME_SHORT: FOO
 *              ALT_USERNAME: abaker
 *                    ALT_DN: CN=Alice Baker,OU=Sales,DC=foo,DC=net
 *              ALT_PASSWORD: apass
 */
defined('TESTS_ZEND_LDAP_HOST') || define('TESTS_ZEND_LDAP_HOST', 'localhost');
//defined('TESTS_ZEND_LDAP_PORT') || define('TESTS_ZEND_LDAP_PORT', 389);
defined('TESTS_ZEND_LDAP_USE_START_TLS') || define('TESTS_ZEND_LDAP_USE_START_TLS', true);
//defined('TESTS_ZEND_LDAP_USE_SSL') || define('TESTS_ZEND_LDAP_USE_SSL', false);
defined('TESTS_ZEND_LDAP_USERNAME') || define('TESTS_ZEND_LDAP_USERNAME', 'CN=someUser,DC=example,DC=com');
defined('TESTS_ZEND_LDAP_PRINCIPAL_NAME') || define('TESTS_ZEND_LDAP_PRINCIPAL_NAME', 'someUser@example.com');
defined('TESTS_ZEND_LDAP_PASSWORD') || define('TESTS_ZEND_LDAP_PASSWORD', null);
defined('TESTS_ZEND_LDAP_BIND_REQUIRES_DN') || define('TESTS_ZEND_LDAP_BIND_REQUIRES_DN', true);
defined('TESTS_ZEND_LDAP_BASE_DN') || define('TESTS_ZEND_LDAP_BASE_DN', 'OU=Sales,DC=example,DC=com');
//defined('TESTS_ZEND_LDAP_ACCOUNT_FILTER_FORMAT') || define('TESTS_ZEND_LDAP_ACCOUNT_FILTER_FORMAT', '(&(objectClass=posixAccount)(uid=%s))');
defined('TESTS_ZEND_LDAP_ACCOUNT_DOMAIN_NAME') || define('TESTS_ZEND_LDAP_ACCOUNT_DOMAIN_NAME', 'example.com');
defined('TESTS_ZEND_LDAP_ACCOUNT_DOMAIN_NAME_SHORT') || define('TESTS_ZEND_LDAP_ACCOUNT_DOMAIN_NAME_SHORT', 'EXAMPLE');
defined('TESTS_ZEND_LDAP_ALT_USERNAME') || define('TESTS_ZEND_LDAP_ALT_USERNAME', 'anotherUser');
defined('TESTS_ZEND_LDAP_ALT_DN') || define('TESTS_ZEND_LDAP_ALT_DN', 'CN=Another User,OU=Sales,DC=example,DC=com');
defined('TESTS_ZEND_LDAP_ALT_PASSWORD') || define('TESTS_ZEND_LDAP_ALT_PASSWORD', null);

/**
 * Zend_Locale tests
 *
 * If the TESTS_ZEND_LOCALE_FORMAT_SETLOCALE property below is a valid,
 * locally recognized locale (try "locale -a"), then all tests in
 * tests/Zend/Locale/ test suites will execute *after*
 *    setlocale(LC_ALL, TESTS_ZEND_LOCALE_FORMAT_SETLOCALE);
 * Primarily, this switches certain PHP functions to emit "localized" output,
 * including the built-in "to string" for integer and float conversions.
 * Thus, a locale of 'fr_FR' yields number-to-string conversions in a
 * localized form with the decimal place separator chosen via:
 *    setlocale(LC_ALL, 'fr_FR@euro');
 */
//defined('TESTS_ZEND_LOCALE_FORMAT_SETLOCALE') || define('TESTS_ZEND_LOCALE_FORMAT_SETLOCALE', 'fr');
//defined('TESTS_ZEND_LOCALE_FORMAT_SETLOCALE') || define('TESTS_ZEND_LOCALE_FORMAT_SETLOCALE', 'fr_FR@euro');
defined('TESTS_ZEND_LOCALE_FORMAT_SETLOCALE') || define('TESTS_ZEND_LOCALE_FORMAT_SETLOCALE', false);

/**
 * Zend_Date tests
 *
 * If the BCMATH_ENABLED property below is false, all arithmetic
 * operations will use ordinary PHP math operators and functions.
 * Otherwise, the bcmath functions will be used for unlimited precision.
 *
 * If the EXTENDED_COVERAGE property below is false, most of the I18N
 * unit tests will not be computed... this speeds tests up to 80 minutes
 * when doing reports. *
 * Edit TestConfiguration.php, not TestConfiguration.php.dist.
 */
defined('TESTS_ZEND_LOCALE_BCMATH_ENABLED') || define('TESTS_ZEND_LOCALE_BCMATH_ENABLED', true);
defined('TESTS_ZEND_I18N_EXTENDED_COVERAGE') || define('TESTS_ZEND_I18N_EXTENDED_COVERAGE', true);

/**
 * Zend_Mail_Storage tests
 *
 * TESTS_ZEND_MAIL_SERVER_TESTDIR and TESTS_ZEND_MAIL_SERVER_FORMAT are used for POP3 and IMAP tests.
 * TESTS_ZEND_MAIL_SERVER_FORMAT is the format your test mail server uses: 'mbox' or 'maildir'. The mail
 * storage for the user specified in your POP3 or IMAP tests should be TESTS_ZEND_MAIL_SERVER_TESTDIR. Be
 * careful: it's cleared before copying the files. If you want to copy the files manually set the dir
 * to null (or anything == null).
 *
 * TESTS_ZEND_MAIL_TEMPDIR is used for testing write operations in local storages. If not set (== null)
 * tempnam() is used.
 */
defined('TESTS_ZEND_MAIL_SERVER_TESTDIR') || define('TESTS_ZEND_MAIL_SERVER_TESTDIR', null);
defined('TESTS_ZEND_MAIL_SERVER_FORMAT') || define('TESTS_ZEND_MAIL_SERVER_FORMAT', 'mbox');
defined('TESTS_ZEND_MAIL_TEMPDIR') || define('TESTS_ZEND_MAIL_TEMPDIR', null);

/**
 * Zend_Mail_Storage_Pop3 / Zend_Mail_Transport_Pop3
 *
 * IMPORTANT: you need to copy tests/Zend/Mail/_files/test.mbox to your mail
 * if you haven't set TESTS_ZEND_MAIL_SERVER_TESTDIR
 */
defined('TESTS_ZEND_MAIL_POP3_ENABLED') || define('TESTS_ZEND_MAIL_POP3_ENABLED', false);
defined('TESTS_ZEND_MAIL_POP3_HOST') || define('TESTS_ZEND_MAIL_POP3_HOST', 'localhost');
defined('TESTS_ZEND_MAIL_POP3_USER') || define('TESTS_ZEND_MAIL_POP3_USER', 'test');
defined('TESTS_ZEND_MAIL_POP3_PASSWORD') || define('TESTS_ZEND_MAIL_POP3_PASSWORD', '');
// test SSL connections if enabled in your test server
defined('TESTS_ZEND_MAIL_POP3_SSL') || define('TESTS_ZEND_MAIL_POP3_SSL', true);
defined('TESTS_ZEND_MAIL_POP3_TLS') || define('TESTS_ZEND_MAIL_POP3_TLS', true);
// WRONG_PORT should be an existing server port,
// INVALID_PORT should be a non existing (each on defined host)
defined('TESTS_ZEND_MAIL_POP3_WRONG_PORT') || define('TESTS_ZEND_MAIL_POP3_WRONG_PORT', 80);
defined('TESTS_ZEND_MAIL_POP3_INVALID_PORT') || define('TESTS_ZEND_MAIL_POP3_INVALID_PORT', 3141);

/**
 * Zend_Mail_Storage_Imap / Zend_Mail_Transport_Imap
 *
 * IMPORTANT: you need to copy tests/Zend/Mail/_files/test.mbox to your mail
 * if you haven't set TESTS_ZEND_MAIL_SERVER_TESTDIR
 */
defined('TESTS_ZEND_MAIL_IMAP_ENABLED') || define('TESTS_ZEND_MAIL_IMAP_ENABLED', false);
defined('TESTS_ZEND_MAIL_IMAP_HOST') || define('TESTS_ZEND_MAIL_IMAP_HOST', 'localhost');
defined('TESTS_ZEND_MAIL_IMAP_USER') || define('TESTS_ZEND_MAIL_IMAP_USER', 'test');
defined('TESTS_ZEND_MAIL_IMAP_PASSWORD') || define('TESTS_ZEND_MAIL_IMAP_PASSWORD', '');
// test SSL connections if enabled in your test server
defined('TESTS_ZEND_MAIL_IMAP_SSL') || define('TESTS_ZEND_MAIL_IMAP_SSL', true);
defined('TESTS_ZEND_MAIL_IMAP_TLS') || define('TESTS_ZEND_MAIL_IMAP_TLS', true);
// WRONG_PORT should be an existing server port,
// INVALID_PORT should be a non-existing (each on defined host)
defined('TESTS_ZEND_MAIL_IMAP_WRONG_PORT') || define('TESTS_ZEND_MAIL_IMAP_WRONG_PORT', 80);
defined('TESTS_ZEND_MAIL_IMAP_INVALID_PORT') || define('TESTS_ZEND_MAIL_IMAP_INVALID_PORT', 3141);


/**
 * Zend_Mail_Storage_Maildir test
 *
 * Before enabling this test you have to unpack messages.tar in
 * Zend/Mail/_files/test.maildir/cur/ and remove the tar for this test to work.
 * That's because the messages files have a colon in the filename and that's a
 * forbidden character on Windows.
 */
defined('TESTS_ZEND_MAIL_MAILDIR_ENABLED') || define('TESTS_ZEND_MAIL_MAILDIR_ENABLED', false);

/**
 * Zend_Mail_Transport_Smtp
 *
 * @todo TO be implemented
 */
defined('TESTS_ZEND_MAIL_SMTP_ENABLED') || define('TESTS_ZEND_MAIL_SMTP_ENABLED', false);
defined('TESTS_ZEND_MAIL_SMTP_HOST') || define('TESTS_ZEND_MAIL_SMTP_HOST', 'localhost');
defined('TESTS_ZEND_MAIL_SMTP_PORT') || define('TESTS_ZEND_MAIL_SMTP_PORT', 25);
defined('TESTS_ZEND_MAIL_SMTP_USER') || define('TESTS_ZEND_MAIL_SMTP_USER', 'testuser');
defined('TESTS_ZEND_MAIL_SMTP_PASSWORD') || define('TESTS_ZEND_MAIL_SMTP_PASSWORD', 'testpassword');
defined('TESTS_ZEND_MAIL_SMTP_AUTH') || define('TESTS_ZEND_MAIL_SMTP_AUTH', false);
// AUTH can be set to false or a string of AUTH method (e.g. LOGIN, PLAIN, CRAMMD5 or DIGESTMD5)

/**
 * Zend_Queue Test Configuration constants
 *
 * The Zend_Queue_Adapter_Db constant should be a JSON-encoded string
 * representing a configuration object for Zend_Db::factory(). For example:
 * {
 *     type: "pdo_mysql",
 *     host: "127.0.0.1",
 *     port: 3306,
 *     username: "queue",
 *     password: "queue",
 *     dbname: "queue"
 * }
 *
 * The PlatformJobQueue adapter expects two parameters, the host and password.
 * The HOST string should include both the host and port (typically 10003):
 *     127.0.0.1:10003
 * When running tests against PlatformJobQueue, it's best to do so where
 * Platform is installed on localhost and has maximum workers set to 20
 * (default is 5); do so with this zend.ini setting:
 *     zend_jq.max_num_of_request_workers=20
 *
 * Selectively define the below in order to run tests for them.
 */
defined('TESTS_ZEND_QUEUE_ACTIVEMQ_ENABLED') || define('TESTS_ZEND_QUEUE_ACTIVEMQ_ENABLED', false);
defined('TESTS_ZEND_QUEUE_ACTIVEMQ_SCHEME') || define('TESTS_ZEND_QUEUE_ACTIVEMQ_SCHEME', false);
defined('TESTS_ZEND_QUEUE_ACTIVEMQ_HOST') || define('TESTS_ZEND_QUEUE_ACTIVEMQ_HOST', false);
defined('TESTS_ZEND_QUEUE_ACTIVEMQ_PORT') || define('TESTS_ZEND_QUEUE_ACTIVEMQ_PORT', false);
defined('TESTS_ZEND_QUEUE_DB') || define('TESTS_ZEND_QUEUE_DB', false);
defined('TESTS_ZEND_QUEUE_MEMCACHEQ_ENABLED') || define('TESTS_ZEND_QUEUE_MEMCACHEQ_ENABLED', false);
defined('TESTS_ZEND_QUEUE_MEMCACHEQ_HOST') || define('TESTS_ZEND_QUEUE_MEMCACHEQ_HOST', false);
defined('TESTS_ZEND_QUEUE_MEMCACHEQ_PORT') || define('TESTS_ZEND_QUEUE_MEMCACHEQ_PORT', false);
defined('TESTS_ZEND_QUEUE_PLATFORMJQ_ENABLED') || define('TESTS_ZEND_QUEUE_PLATFORMJQ_ENABLED', false);
defined('TESTS_ZEND_QUEUE_PLATFORMJQ_HOST') || define('TESTS_ZEND_QUEUE_PLATFORMJQ_HOST', false);
defined('TESTS_ZEND_QUEUE_PLATFORMJQ_PASS') || define('TESTS_ZEND_QUEUE_PLATFORMJQ_PASS', false);

/**
 * Zend_Rest tests
 */
defined('TESTS_ZEND_REST_ONLINE_ENABLED') || define('TESTS_ZEND_REST_ONLINE_ENABLED', false);


/**
 * Zend_Serializer adapter tests
 *
 * TESTS_ZEND_SERIALIZER_ADAPTER_WDDX_ENABLED:
 *   - enable wddx adapter tests
 *   - needs wddx and SimpleXml php extension installed
 *
 * TESTS_ZEND_SERIALIZER_ADAPTER_IGBINARY_ENABLED:
 *   - enable igbinary adapter tests
 *   - needs igbinary php extension installed
 */
defined('TESTS_ZEND_SERIALIZER_ADAPTER_WDDX_ENABLED') || define('TESTS_ZEND_SERIALIZER_ADAPTER_WDDX_ENABLED', false);
defined('TESTS_ZEND_SERIALIZER_ADAPTER_IGBINARY_ENABLED') || define('TESTS_ZEND_SERIALIZER_ADAPTER_IGBINARY_ENABLED', false);

/**
 * Zend_Service_Amazon online tests
 */
defined('TESTS_ZEND_SERVICE_AMAZON_ONLINE_ENABLED') || define('TESTS_ZEND_SERVICE_AMAZON_ONLINE_ENABLED', false);
defined('TESTS_ZEND_SERVICE_AMAZON_ONLINE_ACCESSKEYID') || define('TESTS_ZEND_SERVICE_AMAZON_ONLINE_ACCESSKEYID', 'Enter AWSAccessKeyId here');
defined('TESTS_ZEND_SERVICE_AMAZON_ONLINE_SECRETKEY') || define('TESTS_ZEND_SERVICE_AMAZON_ONLINE_SECRETKEY', 'Enter AWSSecretKey here');
defined('TESTS_ZEND_SERVICE_AMAZON_EC2_IMAGE_ID') || define('TESTS_ZEND_SERVICE_AMAZON_EC2_IMAGE_ID', 'zftestamazonimageid');
defined('TESTS_ZEND_SERVICE_AMAZON_EC2_ZONE') || define('TESTS_ZEND_SERVICE_AMAZON_EC2_ZONE', 'us-east-1');
defined('TESTS_ZEND_SERVICE_AMAZON_EC2_SECURITY_GROUP') || define('TESTS_ZEND_SERVICE_AMAZON_EC2_SECURITY_GROUP', 'default');
defined('TESTS_ZEND_SERVICE_AMAZON_S3_BUCKET') || define('TESTS_ZEND_SERVICE_AMAZON_S3_BUCKET', 'zftestamazons3bucket');
defined('TESTS_ZEND_SERVICE_AMAZON_SQS_QUEUE') || define('TESTS_ZEND_SERVICE_AMAZON_SQS_QUEUE', 'zftestamazonsqsqueuename');

/**
 * Zend_Service_Delicious tests
 */
defined('TESTS_ZEND_SERVICE_DELICIOUS_ENABLED') || define('TESTS_ZEND_SERVICE_DELICIOUS_ENABLED', false);

/**
 * Zend_Service_DeveloperGarden tests
 * Setup your Username and Password to test this Service
 */
defined('TESTS_ZEND_SERVICE_DEVELOPERGARDEN_ONLINE_ENABLED') || define('TESTS_ZEND_SERVICE_DEVELOPERGARDEN_ONLINE_ENABLED', false);
defined('TESTS_ZEND_SERVICE_DEVELOPERGARDEN_ONLINE_LOGIN') || define('TESTS_ZEND_SERVICE_DEVELOPERGARDEN_ONLINE_LOGIN', 'ZF_Username');
defined('TESTS_ZEND_SERVICE_DEVELOPERGARDEN_ONLINE_PASSWORD') || define('TESTS_ZEND_SERVICE_DEVELOPERGARDEN_ONLINE_PASSWORD', 'ZF_Password');

/**
 * Zend_Service_Ebay online tests
 */
defined('TESTS_ZEND_SERVICE_EBAY_ONLINE_ENABLED') || define('TESTS_ZEND_SERVICE_EBAY_ONLINE_ENABLED', false);
defined('TESTS_ZEND_SERVICE_EBAY_ONLINE_APPID') || define('TESTS_ZEND_SERVICE_EBAY_ONLINE_APPID', 'Enter APPID here');

/**
 * Zend_Service_Flickr online tests
 */
defined('TESTS_ZEND_SERVICE_FLICKR_ONLINE_ENABLED') || define('TESTS_ZEND_SERVICE_FLICKR_ONLINE_ENABLED', false);
defined('TESTS_ZEND_SERVICE_FLICKR_ONLINE_APIKEY') || define('TESTS_ZEND_SERVICE_FLICKR_ONLINE_APIKEY', 'Enter API key here');

/**
 * Zend_Service_LiveDocx configuration
 *
 * Define username and password in order to run unit tests for LiveDocX web
 * services.
 *
 * phpunit/phpunit will typically work.
 */
defined('TESTS_ZEND_SERVICE_LIVEDOCX_USERNAME') || define('TESTS_ZEND_SERVICE_LIVEDOCX_USERNAME', false);
defined('TESTS_ZEND_SERVICE_LIVEDOCX_PASSWORD') || define('TESTS_ZEND_SERVICE_LIVEDOCX_PASSWORD', false);

/**
 * Zend_Service_Rackspace tests
 */
defined('TESTS_ZEND_SERVICE_RACKSPACE_ONLINE_ENABLED') || define('TESTS_ZEND_SERVICE_RACKSPACE_ONLINE_ENABLED', false);
defined('TESTS_ZEND_SERVICE_RACKSPACE_ONLINE_USER') || define('TESTS_ZEND_SERVICE_RACKSPACE_ONLINE_USER', 'Enter user here');
defined('TESTS_ZEND_SERVICE_RACKSPACE_ONLINE_KEY') || define('TESTS_ZEND_SERVICE_RACKSPACE_ONLINE_KEY', 'Enter key here');
defined('TESTS_ZEND_SERVICE_RACKSPACE_ONLINE_REGION') || define('TESTS_ZEND_SERVICE_RACKSPACE_ONLINE_REGION', 'USA');
defined('TESTS_ZEND_SERVICE_RACKSPACE_CONTAINER_NAME') || define('TESTS_ZEND_SERVICE_RACKSPACE_CONTAINER_NAME', 'zf-unit-test');
defined('TESTS_ZEND_SERVICE_RACKSPACE_OBJECT_NAME') || define('TESTS_ZEND_SERVICE_RACKSPACE_OBJECT_NAME','zf-object-test');
defined('TESTS_ZEND_SERVICE_RACKSPACE_SERVER_NAME') || define('TESTS_ZEND_SERVICE_RACKSPACE_SERVER_NAME', 'zf-unit-test');
defined('TESTS_ZEND_SERVICE_RACKSPACE_SERVER_IMAGEID') || define('TESTS_ZEND_SERVICE_RACKSPACE_SERVER_IMAGEID', '49');
defined('TESTS_ZEND_SERVICE_RACKSPACE_SERVER_NEW_IMAGEID') || define('TESTS_ZEND_SERVICE_RACKSPACE_SERVER_NEW_IMAGEID', '49');
defined('TESTS_ZEND_SERVICE_RACKSPACE_SERVER_FLAVORID') || define('TESTS_ZEND_SERVICE_RACKSPACE_SERVER_FLAVORID', '1');
defined('TESTS_ZEND_SERVICE_RACKSPACE_SERVER_IMAGE_NAME') || define('TESTS_ZEND_SERVICE_RACKSPACE_SERVER_IMAGE_NAME', 'ZFunitTestImage');
defined('TESTS_ZEND_SERVICE_RACKSPACE_SERVER_SHARED_IP_GROUP_NAME') || define('TESTS_ZEND_SERVICE_RACKSPACE_SERVER_SHARED_IP_GROUP_NAME', 'ZFgroupIP');
defined('TESTS_ZEND_SERVICE_RACKSPACE_TIMEOUT') || define('TESTS_ZEND_SERVICE_RACKSPACE_TIMEOUT', 60);

/**
 * Zend_Service_ReCaptcha tests
 */
defined('TESTS_ZEND_SERVICE_RECAPTCHA_ENABLED') || define('TESTS_ZEND_SERVICE_RECAPTCHA_ENABLED', false);
defined('TESTS_ZEND_SERVICE_RECAPTCHA_ONLINE_ENABLED') || define('TESTS_ZEND_SERVICE_RECAPTCHA_ONLINE_ENABLED', false);
defined('TESTS_ZEND_SERVICE_RECAPTCHA_PUBLIC_KEY') || define('TESTS_ZEND_SERVICE_RECAPTCHA_PUBLIC_KEY', 'public key');
defined('TESTS_ZEND_SERVICE_RECAPTCHA_PRIVATE_KEY') || define('TESTS_ZEND_SERVICE_RECAPTCHA_PRIVATE_KEY', 'private key');
defined('TESTS_ZEND_SERVICE_RECAPTCHA_MAILHIDE_PUBLIC_KEY') || define('TESTS_ZEND_SERVICE_RECAPTCHA_MAILHIDE_PUBLIC_KEY', 'public mailhide key');
defined('TESTS_ZEND_SERVICE_RECAPTCHA_MAILHIDE_PRIVATE_KEY') || define('TESTS_ZEND_SERVICE_RECAPTCHA_MAILHIDE_PRIVATE_KEY', 'private mailhide key');

/**
 * Zend_Service_ShortUrl tests
 */
defined('TESTS_ZEND_SERVICE_SHORTURL_BITLY_ENABLED') || define('TESTS_ZEND_SERVICE_SHORTURL_BITLY_ENABLED', false);
defined('TESTS_ZEND_SERVICE_SHORTURL_ISGD_ENABLED') || define('TESTS_ZEND_SERVICE_SHORTURL_ISGD_ENABLED', false);
defined('TESTS_ZEND_SERVICE_SHORTURL_JDEMCZ_ENABLED') || define('TESTS_ZEND_SERVICE_SHORTURL_JDEMCZ_ENABLED', false);
defined('TESTS_ZEND_SERVICE_SHORTURL_METAMARKNET_ENABLED') || define('TESTS_ZEND_SERVICE_SHORTURL_METAMARKNET_ENABLED', false);
defined('TESTS_ZEND_SERVICE_SHORTURL_TINYURL_ENABLED') || define('TESTS_ZEND_SERVICE_SHORTURL_TINYURL_ENABLED', false);


/**
 * Zend_Service_Simpy tests
 */
defined('TESTS_ZEND_SERVICE_SIMPY_ENABLED') || define('TESTS_ZEND_SERVICE_SIMPY_ENABLED', false);
defined('TESTS_ZEND_SERVICE_SIMPY_USERNAME') || define('TESTS_ZEND_SERVICE_SIMPY_USERNAME', 'syapizend');
defined('TESTS_ZEND_SERVICE_SIMPY_PASSWORD') || define('TESTS_ZEND_SERVICE_SIMPY_PASSWORD', 'mgt37ge');

/**
 * Zend_Service_SlideShare tests
 */
defined('TESTS_ZEND_SERVICE_SLIDESHARE_USERNAME') || define('TESTS_ZEND_SERVICE_SLIDESHARE_USERNAME', '');
defined('TESTS_ZEND_SERVICE_SLIDESHARE_PASSWORD') || define('TESTS_ZEND_SERVICE_SLIDESHARE_PASSWORD', '');
defined('TESTS_ZEND_SERVICE_SLIDESHARE_SHAREDSECRET') || define('TESTS_ZEND_SERVICE_SLIDESHARE_SHAREDSECRET', '');
defined('TESTS_ZEND_SERVICE_SLIDESHARE_APIKEY') || define('TESTS_ZEND_SERVICE_SLIDESHARE_APIKEY', '');

// The slide show ID to retrieve during tests
defined('TESTS_ZEND_SERVICE_SLIDESHARE_SLIDESHOWID') || define('TESTS_ZEND_SERVICE_SLIDESHARE_SLIDESHOWID', 0);

// The tag to retrieve during tests
defined('TESTS_ZEND_SERVICE_SLIDESHARE_TAG') || define('TESTS_ZEND_SERVICE_SLIDESHARE_TAG', 'zend');

// The group to retrieve during tests
defined('TESTS_ZEND_SERVICE_SLIDESHARE_GROUP') || define('TESTS_ZEND_SERVICE_SLIDESHARE_GROUP', '');

/**
 * Zend_Service_WindowsAzure  tests
 */

/**
 * Proxy settings
 */

defined('TESTS_ZEND_SERVICE_WINDOWSAZURE_STORAGE_USEPROXY') || define('TESTS_ZEND_SERVICE_WINDOWSAZURE_STORAGE_USEPROXY',                false);
defined('TESTS_ZEND_SERVICE_WINDOWSAZURE_STORAGE_PROXY') || define('TESTS_ZEND_SERVICE_WINDOWSAZURE_STORAGE_PROXY',                   '');
defined('TESTS_ZEND_SERVICE_WINDOWSAZURE_STORAGE_PROXY_PORT') || define('TESTS_ZEND_SERVICE_WINDOWSAZURE_STORAGE_PROXY_PORT',              '8080');
defined('TESTS_ZEND_SERVICE_WINDOWSAZURE_STORAGE_PROXY_CREDENTIALS') || define('TESTS_ZEND_SERVICE_WINDOWSAZURE_STORAGE_PROXY_CREDENTIALS',       '');

/**
 * Azure hosts
 */
defined('TESTS_ZEND_SERVICE_WINDOWSAZURE_BLOB_HOST_DEV') || define('TESTS_ZEND_SERVICE_WINDOWSAZURE_BLOB_HOST_DEV',                   '127.0.0.1:10000');
defined('TESTS_ZEND_SERVICE_WINDOWSAZURE_QUEUE_HOST_DEV') || define('TESTS_ZEND_SERVICE_WINDOWSAZURE_QUEUE_HOST_DEV',                  '127.0.0.1:10001');
defined('TESTS_ZEND_SERVICE_WINDOWSAZURE_TABLE_HOST_DEV') || define('TESTS_ZEND_SERVICE_WINDOWSAZURE_TABLE_HOST_DEV',                  '127.0.0.1:10002');
defined('TESTS_ZEND_SERVICE_WINDOWSAZURE_BLOB_HOST_PROD') || define('TESTS_ZEND_SERVICE_WINDOWSAZURE_BLOB_HOST_PROD',                  'blob.core.windows.net');
defined('TESTS_ZEND_SERVICE_WINDOWSAZURE_QUEUE_HOST_PROD') || define('TESTS_ZEND_SERVICE_WINDOWSAZURE_QUEUE_HOST_PROD',                 'queue.core.windows.net');
defined('TESTS_ZEND_SERVICE_WINDOWSAZURE_TABLE_HOST_PROD') || define('TESTS_ZEND_SERVICE_WINDOWSAZURE_TABLE_HOST_PROD',                 'table.core.windows.net');

/**
 * Credentials
 */
defined('TESTS_ZEND_SERVICE_WINDOWSAZURE_CREDENTIALS_RUNTESTS') || define('TESTS_ZEND_SERVICE_WINDOWSAZURE_CREDENTIALS_RUNTESTS', false);
defined('TESTS_ZEND_SERVICE_WINDOWSAZURE_STORAGE_ACCOUNT_DEV') || define('TESTS_ZEND_SERVICE_WINDOWSAZURE_STORAGE_ACCOUNT_DEV',             'devstoreaccount1');
defined('TESTS_ZEND_SERVICE_WINDOWSAZURE_STORAGE_KEY_DEV') || define('TESTS_ZEND_SERVICE_WINDOWSAZURE_STORAGE_KEY_DEV',                 'Eby8vdM02xNOcqFlqUwJPLlmEtlCDXJ1OUzFT50uSRZ6IFsuFq2UVErCz4I6tq/K1SZFPTOtr/KBHBeksoGMGw==');
defined('TESTS_ZEND_SERVICE_WINDOWSAZURE_STORAGE_ACCOUNT_PROD') || define('TESTS_ZEND_SERVICE_WINDOWSAZURE_STORAGE_ACCOUNT_PROD',            'phptestsdk');
defined('TESTS_ZEND_SERVICE_WINDOWSAZURE_STORAGE_KEY_PROD') || define('TESTS_ZEND_SERVICE_WINDOWSAZURE_STORAGE_KEY_PROD',                '');

/**
 * Blob storage tests
 */
defined('TESTS_ZEND_SERVICE_WINDOWSAZURE_BLOB_RUNTESTS') || define('TESTS_ZEND_SERVICE_WINDOWSAZURE_BLOB_RUNTESTS',                   false);
defined('TESTS_ZEND_SERVICE_WINDOWSAZURE_BLOB_RUNONPROD') || define('TESTS_ZEND_SERVICE_WINDOWSAZURE_BLOB_RUNONPROD',                  false);
defined('TESTS_ZEND_SERVICE_WINDOWSAZURE_BLOB_RUNLARGEBLOB') || define('TESTS_ZEND_SERVICE_WINDOWSAZURE_BLOB_RUNLARGEBLOB',               true);
defined('TESTS_ZEND_SERVICE_WINDOWSAZURE_BLOB_CONTAINER_PREFIX') || define('TESTS_ZEND_SERVICE_WINDOWSAZURE_BLOB_CONTAINER_PREFIX',           'phpazuretestblob');
defined('TESTS_ZEND_SERVICE_WINDOWSAZURE_BLOBSTREAM_CONTAINER_PREFIX') || define('TESTS_ZEND_SERVICE_WINDOWSAZURE_BLOBSTREAM_CONTAINER_PREFIX',     'phpazureteststream');
defined('TESTS_ZEND_SERVICE_WINDOWSAZURE_BLOBSA_CONTAINER_PREFIX') || define('TESTS_ZEND_SERVICE_WINDOWSAZURE_BLOBSA_CONTAINER_PREFIX',         'phpazuretestshared');

/**
 * Table storage tests
 */
defined('TESTS_ZEND_SERVICE_WINDOWSAZURE_TABLE_RUNTESTS') || define('TESTS_ZEND_SERVICE_WINDOWSAZURE_TABLE_RUNTESTS',                  false);
defined('TESTS_ZEND_SERVICE_WINDOWSAZURE_TABLE_RUNONPROD') || define('TESTS_ZEND_SERVICE_WINDOWSAZURE_TABLE_RUNONPROD',                 false);
defined('TESTS_ZEND_SERVICE_WINDOWSAZURE_TABLE_TABLENAME_PREFIX') || define('TESTS_ZEND_SERVICE_WINDOWSAZURE_TABLE_TABLENAME_PREFIX',          'phpazuretesttable');

/**
 * Queue storage tests
 */
defined('TESTS_ZEND_SERVICE_WINDOWSAZURE_QUEUE_RUNTESTS') || define('TESTS_ZEND_SERVICE_WINDOWSAZURE_QUEUE_RUNTESTS',                  false);
defined('TESTS_ZEND_SERVICE_WINDOWSAZURE_QUEUE_RUNONPROD') || define('TESTS_ZEND_SERVICE_WINDOWSAZURE_QUEUE_RUNONPROD',                 false);
defined('TESTS_ZEND_SERVICE_WINDOWSAZURE_QUEUE_PREFIX') || define('TESTS_ZEND_SERVICE_WINDOWSAZURE_QUEUE_PREFIX',                    'phpazuretestqueue');

/**
 * SessionHandler tests
 */
defined('TESTS_ZEND_SERVICE_WINDOWSAZURE_SESSIONHANDLER_RUNTESTS') || define('TESTS_ZEND_SERVICE_WINDOWSAZURE_SESSIONHANDLER_RUNTESTS',         false);
defined('TESTS_ZEND_SERVICE_WINDOWSAZURE_SESSIONHANDLER_RUNONPROD') || define('TESTS_ZEND_SERVICE_WINDOWSAZURE_SESSIONHANDLER_RUNONPROD',        false);
defined('TESTS_ZEND_SERVICE_WINDOWSAZURE_SESSIONHANDLER_TABLENAME_PREFIX') || define('TESTS_ZEND_SERVICE_WINDOWSAZURE_SESSIONHANDLER_TABLENAME_PREFIX', 'phpazuretestsession');

/**
 * Diagnostics tests
 */
defined('TESTS_ZEND_SERVICE_WINDOWSAZURE_DIAGNOSTICS_RUNTESTS') || define('TESTS_ZEND_SERVICE_WINDOWSAZURE_DIAGNOSTICS_RUNTESTS',            false);
defined('TESTS_ZEND_SERVICE_WINDOWSAZURE_DIAGNOSTICS_RUNONPROD') || define('TESTS_ZEND_SERVICE_WINDOWSAZURE_DIAGNOSTICS_RUNONPROD',           false);
defined('TESTS_ZEND_SERVICE_WINDOWSAZURE_DIAGNOSTICS_CONTAINER_PREFIX') || define('TESTS_ZEND_SERVICE_WINDOWSAZURE_DIAGNOSTICS_CONTAINER_PREFIX',    'phpazuretestdiag');

/**
 * Management tests
 */
defined('TESTS_ZEND_SERVICE_WINDOWSAZURE_MANAGEMENT_RUNTESTS') || define('TESTS_ZEND_SERVICE_WINDOWSAZURE_MANAGEMENT_RUNTESTS',             false);
defined('TESTS_ZEND_SERVICE_WINDOWSAZURE_MANAGEMENT_CONTAINER') || define('TESTS_ZEND_SERVICE_WINDOWSAZURE_MANAGEMENT_CONTAINER',            'phpazuretestmgmt');
defined('TESTS_ZEND_SERVICE_WINDOWSAZURE_MANAGEMENT_SERVICENAME') || define('TESTS_ZEND_SERVICE_WINDOWSAZURE_MANAGEMENT_SERVICENAME',          'phptest-sdk');
defined('TESTS_ZEND_SERVICE_WINDOWSAZURE_MANAGEMENT_SUBSCRIPTIONID') || define('TESTS_ZEND_SERVICE_WINDOWSAZURE_MANAGEMENT_SUBSCRIPTIONID',       '');
defined('TESTS_ZEND_SERVICE_WINDOWSAZURE_MANAGEMENT_CERTIFICATEPASSWORD') || define('TESTS_ZEND_SERVICE_WINDOWSAZURE_MANAGEMENT_CERTIFICATEPASSWORD',  'phpazure');

/**
 * SQL Management tests
 */
defined('TESTS_ZEND_SERVICE_WINDOWSAZURE_SQLMANAGEMENT_RUNTESTS') || define('TESTS_ZEND_SERVICE_WINDOWSAZURE_SQLMANAGEMENT_RUNTESTS',             true);
defined('TESTS_ZEND_SERVICE_WINDOWSAZURE_SQLMANAGEMENT_SUBSCRIPTIONID') || define('TESTS_ZEND_SERVICE_WINDOWSAZURE_SQLMANAGEMENT_SUBSCRIPTIONID',       '');
defined('TESTS_ZEND_SERVICE_WINDOWSAZURE_SQLMANAGEMENT_CERTIFICATEPASSWORD') || define('TESTS_ZEND_SERVICE_WINDOWSAZURE_SQLMANAGEMENT_CERTIFICATEPASSWORD',  'phpazure');

/**
 * PHPUnit Code Coverage / Test Report
 */
defined('TESTS_ZEND_SERVICE_WINDOWSAZURE_GENERATE_REPORT') || define('TESTS_ZEND_SERVICE_WINDOWSAZURE_GENERATE_REPORT',                 true);
defined('TESTS_ZEND_SERVICE_WINDOWSAZURE_GENERATE_REPORT_TARGET') || define('TESTS_ZEND_SERVICE_WINDOWSAZURE_GENERATE_REPORT_TARGET',          '/path/to/target');

/**
 * Proxy settings used by Zend_Cloud
 */
defined('TESTS_ZEND_SERVICE_WINDOWSAZURE_ONLINE_ACCOUNTNAME') || define('TESTS_ZEND_SERVICE_WINDOWSAZURE_ONLINE_ACCOUNTNAME','');
defined('TESTS_ZEND_SERVICE_WINDOWSAZURE_ONLINE_ACCOUNTKEY') || define('TESTS_ZEND_SERVICE_WINDOWSAZURE_ONLINE_ACCOUNTKEY','');
defined('TESTS_ZEND_SERVICE_WINDOWSAZURE_ONLINE_TABLE_HOST') || define('TESTS_ZEND_SERVICE_WINDOWSAZURE_ONLINE_TABLE_HOST','');
defined('TESTS_ZEND_SERVICE_WINDOWSAZURE_ONLINE_STORAGE_USEPROXY') || define('TESTS_ZEND_SERVICE_WINDOWSAZURE_ONLINE_STORAGE_USEPROXY',          false);
defined('TESTS_ZEND_SERVICE_WINDOWSAZURE_ONLINE_STORAGE_PROXY_HOST') || define('TESTS_ZEND_SERVICE_WINDOWSAZURE_ONLINE_STORAGE_PROXY_HOST',        '');
defined('TESTS_ZEND_SERVICE_WINDOWSAZURE_ONLINE_STORAGE_PROXY_PORT') || define('TESTS_ZEND_SERVICE_WINDOWSAZURE_ONLINE_STORAGE_PROXY_PORT',        '8080');
defined('TESTS_ZEND_SERVICE_WINDOWSAZURE_ONLINE_STORAGE_PROXY_CREDENTIALS') || define('TESTS_ZEND_SERVICE_WINDOWSAZURE_ONLINE_STORAGE_PROXY_CREDENTIALS', '');


/**
 * Zend_Service_Yahoo online tests
 */
defined('TESTS_ZEND_SERVICE_YAHOO_ONLINE_ENABLED') || define('TESTS_ZEND_SERVICE_YAHOO_ONLINE_ENABLED', false);
defined('TESTS_ZEND_SERVICE_YAHOO_ONLINE_APPID') || define('TESTS_ZEND_SERVICE_YAHOO_ONLINE_APPID', 'Enter APPID here');

/**
 * Zend_Soap_AutoDiscover scenario tests for complex objects and wsdl generation
 *
 * Copy all the files of zf/tests/Zend/Soap/_files/fulltests into a directory
 * that can be reached by webserver and enter the base uri to this directory
 * into the variable. The test "Zend_Soap_AutoDiscover_OnlineTest" makes use
 * of the servers and AutoDiscover feature.
 *
 * NOTE: Make sure the servers are using the correct Zend Framework copy,
 * when having more than one version installed and include paths are changing.
 */
defined('TESTS_ZEND_SOAP_AUTODISCOVER_ONLINE_SERVER_BASEURI') || define('TESTS_ZEND_SOAP_AUTODISCOVER_ONLINE_SERVER_BASEURI', false);

/**
 * Zend_Uri tests
 *
 * Setting CRASH_TEST_ENABLED to true will enable some tests that may
 * potentially crash PHP on some systems, due to very deep-nesting regular
 * expressions.
 *
 * Only do this if you know what you are doing!
 */
defined('TESTS_ZEND_URI_CRASH_TEST_ENABLED') || define('TESTS_ZEND_URI_CRASH_TEST_ENABLED', false);

/**
 * Zend_Version tests
 *
 * Set ONLINE_ENABLED if you wish to run validators that require network
 * connectivity.
 */
defined('TESTS_ZEND_VERSION_ONLINE_ENABLED') || define('TESTS_ZEND_VERSION_ONLINE_ENABLED', false);


/**
 * Zend_Validate tests
 *
 * Set ONLINE_ENABLED if you wish to run validators that require network
 * connectivity.
 */
defined('TESTS_ZEND_VALIDATE_ONLINE_ENABLED') || define('TESTS_ZEND_VALIDATE_ONLINE_ENABLED', false);

/**
 * Resources translations ('all' for all translations or 'fr', 'de', ...)
 */
defined('TESTS_ZEND_RESOURCES_TRANSLATIONS') || define('TESTS_ZEND_RESOURCES_TRANSLATIONS', 'all');

/**
 * PHPUnit Code Coverage / Test Report
 */
defined('TESTS_GENERATE_REPORT') || define('TESTS_GENERATE_REPORT', false);
defined('TESTS_GENERATE_REPORT_TARGET') || define('TESTS_GENERATE_REPORT_TARGET', '/path/to/target');
